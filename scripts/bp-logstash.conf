# updated logstash config for BPs

input {
  lumberjack {
    port => 5001
    type => "apache_json"
    codec => "json"
    ssl_certificate => "/etc/logstash/logstash-forwarder.crt"
    ssl_key => "/etc/logstash/logstash-forwarder.key"
  }
}

filter {

  if [clientip]  {
    geoip {
      source => "clientip"
      target => "geoip"
      fields => [ "country_code2", "region_name" ]
    }
  }

  if [agent] != "-" and [agent] != "" {
      useragent {
         add_tag => [ "UA" ]
         source => "agent"
      }
  }

  if "UA" in [tags] {
      if [device] == "Other" { mutate { remove_field => "device" } }
      if [name]   == "Other" { mutate { remove_field => "name" } }
      if [os]     == "Other" { mutate { remove_field => "os" } }
      if [os_name]     == "Other" { mutate { remove_field => "os_name" } }
  }

  if [referer] == "-" { mutate { remove_field => "referer" } }
  if [agent] == "-" { mutate { remove_field => "agent" } }
  if [cont_type] == "-" { mutate { remove_field => "cont_type" } }
  if [cont_enc] == "-" { mutate { remove_field => "cont_enc" } }
  if [error_log_id] == "-" { mutate { remove_field => "error_log_id" } }
  if [range] == "-" { mutate { remove_field => "range" } }
  if [c_range] == "-" { mutate { remove_field => "c_range" } }
  if [upstream_time] == "-" { mutate { remove_field => "upstream_time" } }

  if [FBT_mu] == "-" { mutate { remove_field => "FBT_mu" } }
  if [FBT_mu] { mutate { convert => [ "FBT_mu", "integer" ] } }
  mutate { remove_field => "file" }
  mutate { remove_field => "offset" }
  mutate { remove_field => "cookie" }

  mutate { remove_field => "pid" }
  mutate { remove_field => "clientport" }

  clone {
    add_tag => ["short"]
    clones => ["apache_json_short"]
    remove_field => [ "agent", "cont_type", "conn_id", "lm_rtt", "request", "clientip", "type", "referer", "protocol", "range", "c_range", "cache_age", "cache_ttl", "cont_enc" ]
  }
  if "short" not in [tags] {
    clone {
      add_tag => ["logshipper"]
      clones => ["logshipper"]
      add_field => {"message" => '@cee: {"@timestamp":"%{@timestamp}","unixtime":%{unixtime},"domain":"%{domain}","ipport":"%{ipport}","response":"%{response}","request":"%{request}","s_bytes":%{s_bytes},"r_bytes":%{r_bytes},"method":"%{method}","conn_status":"%{conn_status}","KA":%{KA},"FBT_mu":%{FBT_mu},"cache":"%{cache}","referer":"%{referer}","agent":"%{agent}","cont_type":"%{cont_type}","quic":"%{quic}","http2":"%{http2}"}'}
    }
  }
  mutate { remove_field => "unixtime" }
}

output {
  if "short" in [tags] {
    elasticsearch {
      host => ["TESTSJC20-ES01.REVSW.NET"]      # short logging ES cluster
      cluster => "test-elasticsearch"
      protocol => "node"
      bind_port => 9400
    }
  } else if "logshipper" in [tags] {
    syslog {
      appname => "LOGSHIPPER"
      facility => "daemon"
      host => "TESTSJC20-LS01.REVSW.NET"        # log shipping service
      port => 514
      severity => "debug"
      protocol => "udp"
      codec => "json"
      message => "%{message}"
    }
  } else {
    elasticsearch {
      host => ["TESTSJC20-ESURL01.REVSW.NET"]   # short logging ES cluster
      cluster => "elasticsearch-url"
      protocol => "http"
    }
  }
}


# '{"@timestamp":"%{@timestamp}","unixtime":%{unixtime},"domain":"%{domain}","ipport":"%{ipport}","response":"%{response}","request":"%{request}","s_bytes":%{s_bytes},"r_bytes":%{r_bytes},"method":"%{method}","conn_status":"%{conn_status}","KA":%{KA},"FBT_mu":%{FBT_mu},"cache":"%{cache}","referer":"%{referer}","agent":"%{agent}","cont_type":"%{cont_type}","quic":"%{quic}","http2":"%{http2}"}'

# '{"@timestamp":"%{@timestamp}","domain":"%{domain}","ipport":"%{ipport}","protocol":"%{protocol}","response":"%{response}","request":"%{request}","s_bytes":"%{s_bytes}","r_bytes":"%{r_bytes}","method":"%{method}","conn_status":"%{conn_status}","KA":"%{KA}","FBT_mu":"%{FBT_mu}","cache":"%{cache}","cache_age":"%{cache_age}","cache_ttl":"%{cache_ttl}","referer":"%{referer}","agent":"%{agent}","cont_type":"%{cont_type}","sdk_host":"%{sdk_host}","quic":"%{quic}","http2":"%{http2}","name":"%{name}","os":"%{os}","device":"%{device}"}'

